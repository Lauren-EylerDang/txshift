% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tmle_shift.R
\name{tmle_shit}
\alias{tmle_shit}
\title{Estimate the effect of a continuous treatment}
\usage{
tmle_shit(Y, A, W, Qn, gn, delta, tol = 1e-05, iter_max = 5, A_val)
}
\arguments{
\item{Y}{Outcome vector.}

\item{A}{Treatment vector.}

\item{W}{Covariate \code{matrix} or \code{data.frame}.}

\item{Qn}{Function to compute Q(A, W) = E(Y | A, W).}

\item{gn}{Function to compute g(A, W) = density(A | W)}

\item{delta}{Shift value of interest (i.e., compute the effect of shifting
the treatment A by delta units.}

\item{tol}{Convergence tolerance for parametric fluctuation.}

\item{iter_max}{Maximum number of iterations.}

\item{A_val}{Points in the range of the treatment A to approximate integrals
by Riemmann sums. These must be equally spaced along a grid.}
}
\description{
Estimate the effect of a continuous treatment
}
\examples{
n <-100
W <- data.frame(W1 = runif(n), W2 = rbinom(n, 1, 0.7))
A <- rpois(n, lambda = exp(3 + .3 * log(W$W1) - 0.2 * exp(W$W1) * W$W2))
Y <- rbinom(n, 1, plogis(-1 + 0.05 * A - 0.02 * A * W$W2 +
                         0.2 * A * tan(W$W1^2) - .02 * W$W1 * W$W2 +
                         0.1 * A * W$W1 * W$W2))
fitA.0 <- glm(A ~ I(log(W1)) + I(exp(W1)):W2, family = poisson,
              data = data.frame(A, W))
fitY.0 <- glm(Y ~ A + A:W2 + A:I(tan(W1^2)) + W1:W2 + A:W1:W2,
              family = binomial, data = data.frame(A, W))
gn.0  <- function(A = A, W = W) {
  dpois(A, lambda = predict(fitA.0, newdata = W, type = "response"))
}
Qn.0 <- function(A = A, W = W) {
  predict(fitY.0, newdata = data.frame(A, W, row.names = NULL),
          type = "response")
}
tmle00 <- tmle_shit(Y, A, W, Qn.0, gn.0, delta = 2, tol = 1e-4, iter_max = 5,
                    A_val = seq(1, 60, 1))
}
\author{
Ivan Diaz, with contributions from Nima Hejazi
}
